DI (Dependency Injection) 의존성 주입/ 종속성 주입

인턴 처음 들어왔을 때 차장님이 DI가 뭐냐고 물으셨는데 대답 못했었다ㅎ..

의존 : A 클래스에서 B 클래스에 있는 기능을 사용하는 것
(B 클래스 = 의존하는 객체)

의존하는 객체를 직접 생성(new)하지 않고, 스프링 컨테이너에서 의존하는 객체를 전달(주입) 받는 것.
쉽게 생각하면 객체 생성할 때 new 안쓰는 거

스프링 컨테이너 : 객체의 라이프사이클(생성부터 소멸까지)을 관리하는 역할
(= IoC컨테이너, BeanFactory)

스프링 컨테이너가 관리하는 객체 : 빈(Bean)
Bean을 관리한다고 해서 BeanFactory라고도 함.
BeanFactory에 기능들을 추가한 것 중 애플리케이션컨텍스트(applicationContext)가 있다.
